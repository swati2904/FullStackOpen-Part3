{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","services","getAll","axios","get","then","response","data","create","newobj","post","update","id","put","delete","Button","text","handleClick","onClick","Person","person","handleDelete","name","number","SuccessMessage","message","className","ErrorMessage","Persons","persons","map","Filter","searchValue","handleSearchValue","value","onChange","PersonForm","newName","handleAddName","handleAddNumber","handleSubmit","onSubmit","type","App","useState","setPersons","setNewName","setNumber","setSearchValue","error","setError","success","setSuccess","useEffect","personService","event","target","preventDefault","previousStack","oldPerson","findIndex","push","setTimeout","window","confirm","console","log","alert","filter","toLowerCase","includes","updatedPerson","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6fc1892.chunk.js","sourcesContent":["import axios from \"axios\";\n// const baseUrl = \"http://localhost:3001/persons\";\n//const baseUrl = \"http://localhost:3001/api/persons\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newobj) => {\n  const request = axios.post(baseUrl, newobj);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newobj) => {\n  const request = axios.put(`${baseUrl}/${id}`, newobj);\n  return request.then((response) => response.data);\n};\n\nconst removePerson = (id, newobj) => {\n  const request = axios.delete(`${baseUrl}/${id}`, newobj);\n  return request.then((response) => response.data);\n};\nconst services = {\n  getAll: getAll,\n  create: create,\n  update: update,\n  delete: removePerson,\n};\n\nexport default services;\n","import React, { useState, useEffect } from \"react\";\nimport personService from \"./services/persons\";\nimport \"./index.css\";\n\nconst Button = ({ text, handleClick }) => {\n  return <button onClick={handleClick}> {text}</button>;\n};\nconst Person = ({ person, handleDelete }) => {\n  const { name, number } = person;\n  return (\n    <p>\n      {name} {number}\n      <Button text=\"delete\" handleClick={() => handleDelete(person)} />\n    </p>\n  );\n};\n\nconst SuccessMessage = ({ message }) => {\n  if (!message) {\n    return null;\n  }\n\n  return (\n    <div className=\"success\">\n      <div>Success:</div>\n      {message}\n    </div>\n  );\n};\n\nconst ErrorMessage = ({ message }) => {\n  if (!message) {\n    return null;\n  }\n\n  return (\n    <div className=\"error\">\n      <div>Error:</div>\n      {message}\n    </div>\n  );\n};\n\nconst Persons = ({ persons, handleDelete }) => {\n  return (\n    <div>\n      <h2>Numbers</h2>\n      {persons.map((person) => (\n        <Person key={person.name} person={person} handleDelete={handleDelete} />\n      ))}\n    </div>\n  );\n};\n\nconst Filter = ({ searchValue, handleSearchValue }) => {\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <div>\n        Filter shown up with:\n        <input value={searchValue} onChange={handleSearchValue} />\n      </div>\n    </>\n  );\n};\n\nconst PersonForm = ({\n  newName,\n  number,\n  handleAddName,\n  handleAddNumber,\n  handleSubmit,\n}) => {\n  return (\n    <>\n      <h3>add a new</h3>\n      <form onSubmit={handleSubmit}>\n        <div>\n          name:\n          <input value={newName} onChange={handleAddName} />\n        </div>\n        <div>\n          number:\n          <input value={number} onChange={handleAddNumber} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  useEffect(() => {\n    personService.getAll().then((persons) => {\n      setPersons(persons);\n    });\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let previousStack = [...persons];\n    if (!newName || !number) {\n      alert(\"name and number cannot be empty!!\");\n      return;\n    }\n\n    const oldPerson = persons.findIndex((person) => person.name === newName);\n    if (oldPerson !== -1) {\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, replace the old number with a new one?`\n        )\n      ) {\n        console.log(oldPerson);\n        personService\n          .update(persons[oldPerson].id, {\n            name: newName,\n            number: number,\n          })\n          .then((person) => {\n            previousStack[oldPerson] = {\n              ...previousStack[oldPerson],\n              ...person,\n            };\n            setPersons(previousStack);\n            setNewName(\"\");\n            setNumber(\"\");\n            setSuccess(`updated ${newName} number`);\n            setTimeout(() => {\n              setSuccess(\"\");\n            }, 3000);\n          });\n      }\n      return;\n    }\n\n    personService.create({ name: newName, number: number }).then((person) => {\n      previousStack.push(person);\n      setPersons(previousStack);\n      setNewName(\"\");\n      setNumber(\"\");\n      setSuccess(`${newName} Added Successfully`);\n      setTimeout(() => {\n        setSuccess(\"\");\n      }, 3000);\n    });\n  };\n\n  const handleDelete = ({ id, name }) => {\n    if (window.confirm(`Are you sure, you want to delete ${name}?`)) {\n      personService\n        .delete(id)\n        .then(() => {\n          const updatedPerson = persons.filter((person) => person.id !== id);\n          setPersons(updatedPerson);\n        })\n        .catch((error) => {\n          setError(`something went wrong`);\n          setTimeout(() => {\n            setError(\"\");\n          }, 3000);\n        });\n    }\n  };\n\n  const handleAddName = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleAddNumber = (event) => {\n    setNumber(event.target.value);\n  };\n  const handleSearchValue = (event) => {\n    setSearchValue(event.target.value);\n  };\n\n  const filteredValue = () => {\n    return searchValue\n      ? persons.filter((filter) =>\n          filter.name.toLowerCase().includes(searchValue.toLowerCase())\n        )\n      : persons;\n  };\n  return (\n    <>\n      <SuccessMessage message={success} />\n      <ErrorMessage message={error} />\n      <Filter searchValue={searchValue} handleSearchValue={handleSearchValue} />\n\n      <PersonForm\n        newName={newName}\n        number={number}\n        handleAddName={handleAddName}\n        handleAddNumber={handleAddNumber}\n        handleSubmit={handleSubmit}\n      />\n\n      <Persons persons={filteredValue()} handleDelete={handleDelete} />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// axios.get(\"http://localhost:3001/persons\").then((response) => {\n//   const persons = response.data;\n//   ReactDOM.render(<App />, document.getElementById(\"root\"));\n// });\n"],"sourceRoot":""}